{"ast":null,"code":"var _jsxFileName = \"/home/apurva/react-typescript-practice/quiz-app/src/components/QuizCard.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuizCard = _ref => {\n  let {\n    question,\n    answers,\n    userAnswer,\n    totalQuestion,\n    questionNumber,\n    callback\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"number\",\n      children: [\"Question: \", questionNumber, \" / \", totalQuestion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: question\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: userAnswer,\n          onClick: callback,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: answer\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = QuizCard;\nexport default QuizCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizCard\");","map":{"version":3,"sources":["/home/apurva/react-typescript-practice/quiz-app/src/components/QuizCard.tsx"],"names":["QuizCard","question","answers","userAnswer","totalQuestion","questionNumber","callback","__html","map","answer"],"mappings":";;;;AASA,MAAMA,QAAqC,GAAG,QAOxC;AAAA,MAPyC;AAC7CC,IAAAA,QAD6C;AAE7CC,IAAAA,OAF6C;AAG7CC,IAAAA,UAH6C;AAI7CC,IAAAA,aAJ6C;AAK7CC,IAAAA,cAL6C;AAM7CC,IAAAA;AAN6C,GAOzC;AACJ,sBACE;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA,+BACaD,cADb,SACgCD,aADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAG,MAAA,uBAAuB,EAAE;AAAEG,QAAAA,MAAM,EAAEN;AAAV;AAA5B;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGC,OAAO,CAACM,GAAR,CAAaC,MAAD,iBACX;AAAA,+BACE;AAAQ,UAAA,QAAQ,EAAEN,UAAlB;AAA8B,UAAA,OAAO,EAAEG,QAAvC;AAAA,iCACE;AAAM,YAAA,uBAAuB,EAAE;AAAEC,cAAAA,MAAM,EAAEE;AAAV;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAiBD,CAzBD;;KAAMT,Q;AA2BN,eAAeA,QAAf","sourcesContent":["type QuestionCardProps = {\n  question: string;\n  answers: string[];\n  userAnswer: boolean;\n  totalQuestion: number;\n  questionNumber: number;\n  callback: any;\n};\n\nconst QuizCard: React.FC<QuestionCardProps> = ({\n  question,\n  answers,\n  userAnswer,\n  totalQuestion,\n  questionNumber,\n  callback,\n}) => {\n  return (\n    <>\n      <p className=\"number\">\n        Question: {questionNumber} / {totalQuestion}\n      </p>\n      <p dangerouslySetInnerHTML={{ __html: question }}></p>\n      <div className=\"answers\">\n        {answers.map((answer) => (\n          <div>\n            <button disabled={userAnswer} onClick={callback}>\n              <span dangerouslySetInnerHTML={{ __html: answer }} />\n            </button>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default QuizCard;\n"]},"metadata":{},"sourceType":"module"}