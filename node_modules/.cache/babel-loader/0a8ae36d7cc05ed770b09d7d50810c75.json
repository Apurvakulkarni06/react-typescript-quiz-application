{"ast":null,"code":"import { shuffleAnswers } from './utils';\nexport let Difficulty;\n\n(function (Difficulty) {\n  Difficulty[\"EASY\"] = \"easy\";\n  Difficulty[\"MEDIUM\"] = \"medium\";\n  Difficulty[\"HARD\"] = \"hard\";\n})(Difficulty || (Difficulty = {}));\n\nexport const fetchQuestions = async (amount, difficulty) => {\n  const questionUrl = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\n  const data = await (await fetch(questionUrl)).json();\n  console.log(data);\n  return data.results.map(question => ({ ...question,\n    answers: shuffleAnswers([...question.incorrect_answers, question.correct_answer])\n  }));\n};","map":{"version":3,"sources":["/home/apurva/react-typescript-practice/quiz-app/src/API.ts"],"names":["shuffleAnswers","Difficulty","fetchQuestions","amount","difficulty","questionUrl","data","fetch","json","console","log","results","map","question","answers","incorrect_answers","correct_answer"],"mappings":"AAAA,SAASA,cAAT,QAA+B,SAA/B;AAaA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAMZ,OAAO,MAAMC,cAAc,GAAE,OAAOC,MAAP,EAAsBC,UAAtB,KAAiD;AAC1E,QAAMC,WAAW,GAAI,sCAAqCF,MAAO,eAAcC,UAAW,gBAA1F;AACA,QAAME,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,WAAD,CAAZ,EAA2BG,IAA3B,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,SAAOA,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAkBC,QAAD,KAAwB,EAC5C,GAAGA,QADyC;AAE5CC,IAAAA,OAAO,EAAEd,cAAc,CAAC,CAAC,GAAGa,QAAQ,CAACE,iBAAb,EAAgCF,QAAQ,CAACG,cAAzC,CAAD;AAFqB,GAAxB,CAAjB,CAAP;AAIH,CARM","sourcesContent":["import { shuffleAnswers } from './utils';\n\nexport type Question = {\n    category: string\n    correct_answer: string\n    difficulty: string\n    incorrect_answers: string[]\n    question: string\n    type: string\n}\n\nexport type QuestionState = Question & { answers: any[]}\n\nexport enum Difficulty  {\n    EASY = 'easy',\n    MEDIUM = 'medium',\n    HARD = 'hard'\n}\n\nexport const fetchQuestions =async (amount:number, difficulty: Difficulty) => {\n    const questionUrl = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\n    const data = await (await fetch(questionUrl)).json();\n    console.log(data);\n    return data.results.map((question: Question) =>({\n        ...question,\n        answers: shuffleAnswers([...question.incorrect_answers, question.correct_answer])\n    }));\n}"]},"metadata":{},"sourceType":"module"}